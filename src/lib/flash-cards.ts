"use client"

import type { FlashCard } from "@/types/flash-card"

const frontend: FlashCard[] = [
  {
    id: "fe-1",
    type: "multiple-choice",
    difficulty: "easy",
    question: "Which CSS property is used to control the space between elements?",
    options: ["margin", "padding", "border", "spacing"],
    correctAnswer: "margin",
    explanation:
      "The margin property in CSS controls the space outside an element, creating space between elements. Padding controls the space inside an element, between its content and border.",
  },
  {
    id: "fe-2",
    type: "multiple-choice",
    difficulty: "easy",
    question: "What does the 'C' in CSS stand for?",
    options: ["Cascading", "Colorful", "Creative", "Computed"],
    correctAnswer: "Cascading",
    explanation:
      "CSS stands for Cascading Style Sheets. The 'cascading' refers to the way style rules are applied to elements, with certain rules taking precedence over others based on specificity.",
  },
  {
    id: "fe-3",
    type: "keyword",
    difficulty: "easy",
    question: "Explain the difference between 'let', 'const', and 'var' in JavaScript.",
    explanation:
      "In JavaScript, 'var' is function-scoped and can be redeclared and updated. 'let' is block-scoped, can be updated but not redeclared. 'const' is also block-scoped but cannot be updated or redeclared after initialization.",
    keywords: ["scope", "block", "function", "redeclare", "hoisting", "update", "initialization"],
  },
  {
    id: "fe-4",
    type: "keyword",
    difficulty: "easy",
    question: "What is the Virtual DOM in React and why is it important?",
    explanation:
      "The Virtual DOM is a lightweight copy of the actual DOM that React uses to optimize rendering performance. React compares the Virtual DOM with the real DOM to determine the minimal set of changes needed, reducing expensive DOM operations.",
    keywords: ["performance", "rendering", "lightweight", "reconciliation", "diffing", "optimization", "efficiency"],
  },
  {
    id: "fe-5",
    type: "ai-code",
    difficulty: "easy",
    question: "Write a JavaScript function that reverses a string without using the built-in reverse() method.",
  },
  {
    id: "fe-6",
    type: "ai-code",
    difficulty: "easy",
    question: "Create a React component that fetches and displays a list of users from an API.",
  },
  {
    id: "fe-7",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which HTML5 element is used to define navigation links?",
    options: ["<nav>", "<section>", "<header>", "<footer>"],
    correctAnswer: "<nav>",
    explanation:
      "The <nav> element represents a section of a page intended for navigation links.",
  },
  {
    id: "fe-8",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which CSS layout mode uses rows and columns to position items?",
    options: ["Flexbox", "Grid", "Block", "Inline-block"],
    correctAnswer: "Grid",
    explanation:
      "CSS Grid Layout allows content to be organized into rows and columns.",
  },
  {
    id: "fe-9",
    type: "keyword",
    difficulty: "intermediate",
    question: "Describe how event bubbling works in the DOM.",
    explanation:
      "Event bubbling is the process where an event starts at the deepest target element and then propagates upwards through its ancestors.",
    keywords: ["propagation", "target", "ancestors", "stopPropagation", "capture"],
  },
  {
    id: "fe-10",
    type: "keyword",
    difficulty: "intermediate",
    question: "What is closure in JavaScript?",
    explanation:
      "A closure is a function that remembers its outer variables and can access them even when executed outside their scope.",
    keywords: ["scope", "lexical", "function", "outer variables", "memory"],
  },
  {
    id: "fe-11",
    type: "multiple-choice",
    difficulty: "easy",
    question: "Which property controls the stacking order of positioned elements?",
    options: ["order", "z-index", "stack", "position"],
    correctAnswer: "z-index",
    explanation:
      "The z-index property specifies the stack order of positioned elements (elements whose position value is not static).",
  },
  {
    id: "fe-12",
    type: "keyword",
    difficulty: "easy",
    question: "Explain the CSS box model.",
    explanation:
      "The CSS box model describes the rectangular boxes generated for elements, including content, padding, border, and margin.",
    keywords: ["content", "padding", "border", "margin", "box-sizing", "layout"],
  },
  {
    id: "fe-13",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "What does the 'defer' attribute do when added to a <script> tag?",
    options: ["Loads JS asynchronously", "Executes JS after HTML parsing", "Blocks HTML parsing", "None of the above"],
    correctAnswer: "Executes JS after HTML parsing",
    explanation:
      "The defer attribute tells the browser to download the script while parsing the HTML but execute it only after parsing is complete.",
  },
  {
    id: "fe-14",
    type: "keyword",
    difficulty: "hard",
    question: "Describe how CSS specificity is calculated.",
    explanation:
      "CSS specificity is calculated based on the number of ID selectors, class selectors (including attributes and pseudo-classes), and type selectors (including pseudo-elements).",
    keywords: ["ID selector", "class selector", "type selector", "inline style", "!important"],
  },
  {
    id: "fe-15",
    type: "ai-code",
    difficulty: "intermediate",
    question: "Implement a debounce function in JavaScript.",
  },
  {
    id: "fe-16",
    type: "ai-code",
    difficulty: "intermediate",
    question: "Write a custom React hook that tracks window scroll position.",
  },
  {
    id: "fe-17",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which HTTP status code indicates a resource was not found?",
    options: ["200", "301", "404", "500"],
    correctAnswer: "404",
    explanation: "404 Not Found indicates that the server can't find the requested resource.",
  },
  {
    id: "fe-18",
    type: "keyword",
    difficulty: "intermediate",
    question: "What is event delegation?",
    explanation:
      "Event delegation is a technique of using a single event listener on a parent element to handle events triggered by its child elements.",
    keywords: ["listener", "parent", "children", "propagation", "performance"],
  },
  {
    id: "fe-19",
    type: "multiple-choice",
    difficulty: "hard",
    question: "What is tree shaking in the context of JavaScript bundlers?",
    options: ["Removing unused code", "Optimizing CSS", "Caching modules", "Splitting chunks"],
    correctAnswer: "Removing unused code",
    explanation:
      "Tree shaking is the process of eliminating dead code from the final bundle during the build process.",
  },
  {
    id: "fe-20",
    type: "keyword",
    difficulty: "hard",
    question: "Explain the concept of a Service Worker and its use cases.",
    explanation:
      "Service Workers are scripts that run in the background of the browser, enabling features like offline caching, push notifications, and background sync.",
    keywords: ["offline", "cache", "push notifications", "background sync", "PWA"],
  },
  {
    id: "fe-21",
    type: "multiple-choice",
    difficulty: "hard",
    question: "Which of the following is NOT a feature of ARIA?",
    options: ["aria-label", "aria-hidden", "aria-pressable", "aria-expanded"],
    correctAnswer: "aria-pressable",
    explanation:
      "'aria-pressable' is not a standard ARIA attribute.",
  },
  {
    id: "fe-22",
    type: "ai-code",
    difficulty: "hard",
    question: "Build a simple image carousel component in React without using external libraries.",
  },
  {
    id: "fe-23",
    type: "keyword",
    difficulty: "hard",
    question: "What is the Shadow DOM and why is it used?",
    explanation:
      "The Shadow DOM is a way to encapsulate a component's internal DOM and CSS to prevent style and markup conflicts.",
    keywords: ["encapsulation", "web components", "scoping", "custom elements"],
  },
  {
    id: "fe-24",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which tool is commonly used for transpiling modern JavaScript to support older browsers?",
    options: ["Webpack", "Babel", "ESLint", "Rollup"],
    correctAnswer: "Babel",
    explanation:
      "Babel is a JavaScript compiler that converts ES6+ code into backwards-compatible versions.",
  },
  {
    id: "fe-25",
    type: "keyword",
    difficulty: "intermediate",
    question: "Explain the difference between REST and GraphQL.",
    explanation:
      "REST uses fixed endpoints for resources while GraphQL allows clients to request exactly the data they need via a single endpoint.",
    keywords: ["endpoint", "query", "flexibility", "overfetching", "underfetching"],
  },
  {
    id: "fe-26",
    type: "ai-code",
    difficulty: "intermediate",
    question: "Implement lazy loading for images in vanilla JavaScript.",
  },
  {
    id: "fe-27",
    type: "multiple-choice",
    difficulty: "easy",
    question: "What does SSG stand for in modern web development?",
    options: ["Server-Side Generation", "Static Site Generation", "Single-Step Generation", "Secure Site Gateway"],
    correctAnswer: "Static Site Generation",
    explanation:
      "Static Site Generation (SSG) is the process of generating HTML at build time.",
  },
  {
    id: "fe-28",
    type: "keyword",
    difficulty: "easy",
    question: "What is the purpose of the meta viewport tag in HTML?",
    explanation:
      "The meta viewport tag controls layout on mobile browsers by setting the viewport's width and scale.",
    keywords: ["responsive", "mobile", "scale", "width", "initial-scale"],
  },
  {
    id: "fe-29",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which React hook would you use to optimize performance by memoizing a value?",
    options: ["useState", "useEffect", "useMemo", "useContext"],
    correctAnswer: "useMemo",
    explanation:
      "useMemo returns a memoized value and recomputes it only when dependencies change.",
  },
  {
    id: "fe-30",
    type: "ai-code",
    difficulty: "hard",
    question: "Create a context provider in React for managing theme (light/dark mode) across an application.",
  },
];

const backend: FlashCard[] = [
  {
    id: "be-1",
    type: "multiple-choice",
    difficulty: "easy",
    question: "Which port does HTTP use by default?",
    options: ["80", "443", "22", "8080"],
    correctAnswer: "80",
    explanation: "HTTP uses port 80 by default for unencrypted web traffic.",
  },
  {
    id: "be-2",
    type: "multiple-choice",
    difficulty: "easy",
    question: "What does API stand for?",
    options: ["Application Programming Interface", "Applied Program Interaction", "Advanced Protocol Integration", "Automated Processing Input"],
    correctAnswer: "Application Programming Interface",
    explanation: "API stands for Application Programming Interface, which defines methods for communication between software components.",
  },
  {
    id: "be-3",
    type: "keyword",
    difficulty: "easy",
    question: "Explain the core principles of RESTful APIs.",
    explanation: "RESTful APIs follow stateless communication, a uniform interface, resource-based URIs, and use HTTP methods for operations.",
    keywords: ["stateless", "resource", "URI", "HTTP methods", "uniform interface", "cacheable"],
  },
  {
    id: "be-4",
    type: "keyword",
    difficulty: "easy",
    question: "Describe CRUD operations in backend development.",
    explanation: "CRUD stands for Create, Read, Update, Delete — the fundamental operations for persistent storage.",
    keywords: ["create", "read", "update", "delete", "database", "persistence"],
  },
  {
    id: "be-5",
    type: "ai-code",
    difficulty: "easy",
    question: "Write a Node.js Express endpoint that returns 'Hello World'.",
  },
  {
    id: "be-6",
    type: "ai-code",
    difficulty: "easy",
    question: "Implement a function to hash a password using bcrypt in JavaScript.",
  },
  {
    id: "be-7",
    type: "multiple-choice",
    difficulty: "easy",
    question: "Which HTTP method is considered idempotent?",
    options: ["GET", "POST", "PATCH", "OPTIONS"],
    correctAnswer: "GET",
    explanation: "GET is idempotent because multiple identical requests result in the same response without side-effects.",
  },
  {
    id: "be-8",
    type: "multiple-choice",
    difficulty: "easy",
    question: "What does JSON stand for?",
    options: ["JavaScript Object Notation", "Java Syntax Object Notation", "JavaScript Operational Network", "Java Serialized Object Network"],
    correctAnswer: "JavaScript Object Notation",
    explanation: "JSON stands for JavaScript Object Notation, a lightweight data-interchange format.",
  },
  {
    id: "be-9",
    type: "keyword",
    difficulty: "easy",
    question: "Explain the purpose of a JSON Web Token (JWT).",
    explanation: "A JWT is a compact token for securely transmitting information, often used for stateless authentication.",
    keywords: ["token", "authentication", "stateless", "header", "payload", "signature"],
  },
  {
    id: "be-10",
    type: "ai-code",
    difficulty: "easy",
    question: "Write an Express middleware function that logs request method and URL.",
  },
  {
    id: "be-11",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which SQL clause is used to group rows by a specific column?",
    options: ["ORDER BY", "GROUP BY", "HAVING", "WHERE"],
    correctAnswer: "GROUP BY",
    explanation: "GROUP BY collects rows that have the same values in specified columns into summary rows.",
  },
  {
    id: "be-12",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which message broker is commonly used for pub/sub patterns?",
    options: ["Redis", "RabbitMQ", "SQLite", "MongoDB"],
    correctAnswer: "RabbitMQ",
    explanation: "RabbitMQ is a popular message broker that supports advanced routing, pub/sub, and message queuing.",
  },
  {
    id: "be-13",
    type: "keyword",
    difficulty: "intermediate",
    question: "Describe the CAP theorem in distributed systems.",
    explanation: "CAP theorem states that a distributed system can only guarantee two of Consistency, Availability, and Partition tolerance at the same time.",
    keywords: ["consistency", "availability", "partition tolerance", "trade-offs", "distributed"],
  },
  {
    id: "be-14",
    type: "keyword",
    difficulty: "intermediate",
    question: "What is connection pooling and why is it used?",
    explanation: "Connection pooling reuses existing database connections to reduce overhead and improve application performance.",
    keywords: ["reuse", "performance", "database", "overhead", "efficiency"],
  },
  {
    id: "be-15",
    type: "ai-code",
    difficulty: "intermediate",
    question: "Implement a Redis caching wrapper in Node.js for GET and SET operations.",
  },
  {
    id: "be-16",
    type: "ai-code",
    difficulty: "intermediate",
    question: "Create a GraphQL schema and resolver for a User type with id, name, and email.",
  },
  {
    id: "be-17",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which authentication protocol uses scopes and access tokens?",
    options: ["OAuth2", "SAML", "Kerberos", "OpenID Connect"],
    correctAnswer: "OAuth2",
    explanation: "OAuth2 uses scopes and access tokens to authorize client access to server resources.",
  },
  {
    id: "be-18",
    type: "keyword",
    difficulty: "intermediate",
    question: "Explain the WebSocket handshake process.",
    explanation: "WebSocket handshake upgrades an HTTP connection by exchanging specific headers (Upgrade, Connection) and a Sec-WebSocket-Key challenge.",
    keywords: ["Upgrade", "Connection", "Sec-WebSocket-Key", "HTTP 101", "persistent"],
  },
  {
    id: "be-19",
    type: "ai-code",
    difficulty: "intermediate",
    question: "Write a Python function that consumes messages from a Kafka topic and prints them.",
  },
  {
    id: "be-20",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "What does CORS stand for?",
    options: ["Cross-Origin Resource Sharing", "Client-Origin Response System", "Cross-Operation REST Service", "Cache-Only Resource Strategy"],
    correctAnswer: "Cross-Origin Resource Sharing",
    explanation: "CORS is a security feature that allows controlled access to resources from different origins.",
  },
  {
    id: "be-21",
    type: "keyword",
    difficulty: "hard",
    question: "Explain eventual consistency and its trade-offs.",
    explanation: "Eventual consistency ensures that, given no new updates, all replicas will converge to the same state after some time, trading off immediate consistency for availability.",
    keywords: ["replication", "convergence", "availability", "latency", "tolerance"],
  },
  {
    id: "be-22",
    type: "multiple-choice",
    difficulty: "hard",
    question: "Which load balancing algorithm directs traffic to the server with the fewest active connections?",
    options: ["Round Robin", "Least Connections", "IP Hash", "Weighted Round Robin"],
    correctAnswer: "Least Connections",
    explanation: "Least Connections balances load by routing new requests to the server with the fewest current connections.",
  },
  {
    id: "be-23",
    type: "keyword",
    difficulty: "hard",
    question: "Describe the OAuth2 Authorization Code flow.",
    explanation: "Authorization Code flow exchanges an auth code obtained from the authorization server for an access token, using client credentials.",
    keywords: ["authorization code", "access token", "redirect URI", "client ID", "secret"],
  },
  {
    id: "be-24",
    type: "ai-code",
    difficulty: "hard",
    question: "Write a Dockerfile for a Node.js Express application with production optimizations.",
  },
  {
    id: "be-25",
    type: "ai-code",
    difficulty: "hard",
    question: "Create a GitHub Actions workflow YAML that runs tests on every push to main.",
  },
  {
    id: "be-26",
    type: "multiple-choice",
    difficulty: "hard",
    question: "Which RPC framework leverages HTTP/2 and Protocol Buffers?",
    options: ["gRPC", "Thrift", "SOAP", "GraphQL"],
    correctAnswer: "gRPC",
    explanation: "gRPC uses HTTP/2 for transport and Protobuf for message serialization.",
  },
  {
    id: "be-27",
    type: "keyword",
    difficulty: "hard",
    question: "What is service discovery in a microservices architecture?",
    explanation: "Service discovery automates the detection of service instances’ network locations, via client-side or server-side registries.",
    keywords: ["registry", "health check", "DNS", "load balancing", "instances"],
  },
  {
    id: "be-28",
    type: "keyword",
    difficulty: "hard",
    question: "Explain the circuit breaker pattern and when to use it.",
    explanation: "Circuit breaker prevents cascading failures by halting requests to a failing service, then testing periodically to resume traffic.",
    keywords: ["failure", "fallback", "open state", "half-open", "timeout"],
  },
  {
    id: "be-29",
    type: "ai-code",
    difficulty: "hard",
    question: "Build a health-check endpoint in Express that verifies database connectivity.",
  },
  {
    id: "be-30",
    type: "ai-code",
    difficulty: "hard",
    question: "Implement rate-limiting middleware in Express using the token bucket algorithm.",
  },
];

const csFundamentals: FlashCard[] = [
  {
    id: "cs-1",
    type: "multiple-choice",
    difficulty: "easy",
    question: "What is the time complexity of binary search on a sorted array of size n?",
    options: ["O(n)", "O(log n)", "O(n log n)", "O(1)"],
    correctAnswer: "O(log n)",
    explanation: "Binary search divides the search interval in half each step, leading to logarithmic time complexity.",
  },
  {
    id: "cs-2",
    type: "multiple-choice",
    difficulty: "easy",
    question: "Which data structure follows the FIFO (First In, First Out) principle?",
    options: ["Stack", "Queue", "Tree", "Graph"],
    correctAnswer: "Queue",
    explanation: "A queue processes elements in the order they arrive: first in, first out.",
  },
  {
    id: "cs-3",
    type: "keyword",
    difficulty: "easy",
    question: "Explain the difference between an array and a linked list.",
    explanation: "Arrays use contiguous memory for constant-time access by index; linked lists use nodes with pointers, allowing dynamic size and efficient insertion/deletion but linear-time access.",
    keywords: ["contiguous memory", "nodes", "pointers", "index access", "dynamic size", "insertion/deletion"],
  },
  {
    id: "cs-4",
    type: "keyword",
    difficulty: "easy",
    question: "What is a stack and what principle does it follow?",
    explanation: "A stack is a linear data structure that follows LIFO (Last In, First Out): the last element pushed is the first popped.",
    keywords: ["LIFO", "push", "pop", "top", "linear"],
  },
  {
    id: "cs-5",
    type: "ai-code",
    difficulty: "easy",
    question: "Write a function in JavaScript to perform binary search on a sorted array.",
  },
  {
    id: "cs-6",
    type: "ai-code",
    difficulty: "easy",
    question: "Implement a stack using an array in JavaScript with push and pop methods.",
  },
  {
    id: "cs-7",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which sorting algorithm has best-case O(n), average-case O(n^2), and worst-case O(n^2)?",
    options: ["Quick Sort", "Merge Sort", "Bubble Sort", "Heap Sort"],
    correctAnswer: "Bubble Sort",
    explanation: "Bubble sort can detect a sorted list (best-case O(n)) but otherwise has quadratic time complexity.",
  },
  {
    id: "cs-8",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which tree traversal visits nodes in the order: left, root, right?",
    options: ["Preorder", "Inorder", "Postorder", "Level-order"],
    correctAnswer: "Inorder",
    explanation: "Inorder traversal processes the left subtree, then the root, then the right subtree.",
  },
  {
    id: "cs-9",
    type: "keyword",
    difficulty: "intermediate",
    question: "Describe recursion and the importance of a base case.",
    explanation: "Recursion is a function calling itself; a base case stops the recursive calls, preventing infinite loops and enabling termination.",
    keywords: ["function", "self-call", "base case", "termination", "stack"],
  },
  {
    id: "cs-10",
    type: "keyword",
    difficulty: "intermediate",
    question: "What is dynamic programming and when is it used?",
    explanation: "Dynamic programming breaks problems into overlapping subproblems, caching their results to avoid redundant computation.",
    keywords: ["memoization", "tabulation", "optimal substructure", "overlapping subproblems"],
  },
  {
    id: "cs-11",
    type: "ai-code",
    difficulty: "intermediate",
    question: "Implement both recursive and iterative versions of factorial in your language of choice.",
  },
  {
    id: "cs-12",
    type: "ai-code",
    difficulty: "intermediate",
    question: "Write a merge sort algorithm for an array of integers.",
  },
  {
    id: "cs-13",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which data structure uses key-value pairs for average constant-time insert, delete, and lookup?",
    options: ["Array", "Linked List", "Hash Table", "Binary Tree"],
    correctAnswer: "Hash Table",
    explanation: "Hash tables use a hash function to index keys, offering average O(1) operations.",
  },
  {
    id: "cs-14",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "What is the space complexity of depth-first search (DFS) on a graph with depth d?",
    options: ["O(|V|)", "O(d)", "O(|E|)", "O(1)"],
    correctAnswer: "O(d)",
    explanation: "DFS uses a recursion or stack proportional to the max depth d of the graph.",
  },
  {
    id: "cs-15",
    type: "keyword",
    difficulty: "hard",
    question: "Explain the difference between P and NP complexity classes.",
    explanation: "P contains problems solvable in polynomial time; NP contains problems verifiable in polynomial time, not necessarily solvable in polynomial time.",
    keywords: ["polynomial time", "verification", "deterministic", "nondeterministic", "hardness"],
  },
  {
    id: "cs-16",
    type: "keyword",
    difficulty: "hard",
    question: "What is memoization and how does it differ from tabulation?",
    explanation: "Memoization caches results at runtime (top-down), while tabulation builds solutions iteratively in a table (bottom-up).",
    keywords: ["cache", "top-down", "bottom-up", "subproblems", "efficiency"],
  },
  {
    id: "cs-17",
    type: "ai-code",
    difficulty: "hard",
    question: "Implement Dijkstra's algorithm for shortest paths in a weighted graph.",
  },
  {
    id: "cs-18",
    type: "ai-code",
    difficulty: "hard",
    question: "Create a thread-safe queue in Java using synchronized methods or locks.",
  },
  {
    id: "cs-19",
    type: "multiple-choice",
    difficulty: "hard",
    question: "Which set of conditions are necessary and sufficient for a deadlock (the Coffman conditions)?",
    options: [
      "Mutual exclusion, hold and wait, no preemption, circular wait",
      "Mutual exclusion, preemption, circular wait, starvation",
      "Hold and wait, no preemption, starvation, livelock",
      "Mutual exclusion, hold and wait, starvation, livelock"
    ],
    correctAnswer: "Mutual exclusion, hold and wait, no preemption, circular wait",
    explanation: "All four Coffman conditions must hold for a deadlock to occur.",
  },
  {
    id: "cs-20",
    type: "multiple-choice",
    difficulty: "hard",
    question: "Which CPU scheduling algorithm selects the process with the shortest next CPU burst?",
    options: ["FCFS", "SJF", "Round Robin", "Priority"],
    correctAnswer: "SJF",
    explanation: "Shortest Job First selects the process with the smallest CPU burst time next.",
  },
  {
    id: "cs-21",
    type: "keyword",
    difficulty: "hard",
    question: "Describe the producer-consumer problem and a typical solution.",
    explanation: "Producer-consumer synchronizes producers and consumers via a shared buffer and semaphores or locks to avoid race conditions.",
    keywords: ["buffer", "semaphore", "mutex", "synchronization", "race conditions"],
  },
  {
    id: "cs-22",
    type: "keyword",
    difficulty: "hard",
    question: "What is a race condition and how can it be prevented?",
    explanation: "A race condition occurs when concurrent operations access shared data without synchronization; it can be prevented using locks, mutexes, or atomic operations.",
    keywords: ["concurrency", "locks", "mutex", "atomicity", "shared data"],
  },
  {
    id: "cs-23",
    type: "ai-code",
    difficulty: "intermediate",
    question: "Write a function to detect a cycle in a directed graph using depth-first search.",
  },
  {
    id: "cs-24",
    type: "ai-code",
    difficulty: "intermediate",
    question: "Implement an LRU cache with O(1) get and put operations.",
  },
  {
    id: "cs-25",
    type: "multiple-choice",
    difficulty: "easy",
    question: "What does RAM stand for?",
    options: ["Random Access Memory", "Readily Available Module", "Rapid Application Management", "Runtime Allocation Map"],
    correctAnswer: "Random Access Memory",
    explanation: "RAM stands for Random Access Memory, which allows data to be read or written in nearly the same amount of time regardless of the physical location.",
  },
  {
    id: "cs-26",
    type: "multiple-choice",
    difficulty: "easy",
    question: "What does CPU stand for?",
    options: ["Central Processing Unit", "Computer Processing Unit", "Central Performance Utility", "Compute Protocol Unit"],
    correctAnswer: "Central Processing Unit",
    explanation: "CPU stands for Central Processing Unit, the primary component that executes instructions in a computer.",
  },
  {
    id: "cs-27",
    type: "keyword",
    difficulty: "intermediate",
    question: "Explain the difference between a process and a thread.",
    explanation: "A process is an independent execution environment with its own memory; a thread is a smaller execution unit within a process sharing memory and resources.",
    keywords: ["memory space", "context switch", "lightweight", "concurrency"],
  },
  {
    id: "cs-28",
    type: "keyword",
    difficulty: "intermediate",
    question: "What is deadlock in operating systems?",
    explanation: "Deadlock is a state where a set of processes are blocked because each process is holding a resource and waiting for another.",
    keywords: ["blocking", "resources", "waiting", "circular wait"],
  },
  {
    id: "cs-29",
    type: "ai-code",
    difficulty: "intermediate",
    question: "Write code to reverse a singly linked list.",
  },
  {
    id: "cs-30",
    type: "ai-code",
    difficulty: "hard",
    question: "Implement a max-heap and perform heap sort on an array of numbers.",
  },
];

const uiUxDesign: FlashCard[] = [
  {
    id: "ux-1",
    type: "multiple-choice",
    difficulty: "easy",
    question: "Which principle in design refers to grouping related elements visually?",
    options: ["Proximity", "Alignment", "Contrast", "Repetition"],
    correctAnswer: "Proximity",
    explanation: "Proximity groups related elements together to show relationships and improve readability.",
  },
  {
    id: "ux-2",
    type: "multiple-choice",
    difficulty: "easy",
    question: "What does UX stand for?",
    options: ["User Experience", "User Exception", "User Extend", "Unique Experience"],
    correctAnswer: "User Experience",
    explanation: "UX stands for User Experience, focusing on the overall experience a user has with a product or service.",
  },
  {
    id: "ux-3",
    type: "keyword",
    difficulty: "easy",
    question: "Explain Fitts's Law.",
    explanation: "Fitts's Law predicts that the time to acquire a target is a function of the distance to and size of the target.",
    keywords: ["distance", "size", "target", "speed", "time"],
  },
  {
    id: "ux-4",
    type: "keyword",
    difficulty: "easy",
    question: "Describe Hick's Law.",
    explanation: "Hick's Law states that the time to make a decision increases with the number of choices available.",
    keywords: ["choices", "decision time", "complexity", "reaction time"],
  },
  {
    id: "ux-7",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which color model is additive and used for screens?",
    options: ["RGB", "CMYK", "HSB", "Pantone"],
    correctAnswer: "RGB",
    explanation: "RGB combines Red, Green, and Blue light additively to create colors on digital displays.",
  },
  {
    id: "ux-8",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which color model is subtractive and used for print?",
    options: ["RGB", "CMYK", "HEX", "LAB"],
    correctAnswer: "CMYK",
    explanation: "CMYK uses Cyan, Magenta, Yellow, and Key (black) inks to produce colors in print media.",
  },
  {
    id: "ux-9",
    type: "keyword",
    difficulty: "intermediate",
    question: "Explain the concept of a persona in UX research.",
    explanation: "A persona is a fictional archetype representing a segment of users, detailing goals, behaviors, and pain points.",
    keywords: ["archetype", "goals", "pain points", "empathy"],
  },
  {
    id: "ux-10",
    type: "keyword",
    difficulty: "intermediate",
    question: "Describe what a user journey map is.",
    explanation: "A user journey map visualizes the steps, emotions, and touchpoints a user experiences when interacting with a product.",
    keywords: ["touchpoints", "emotions", "actions", "objectives"],
  },
  {
    id: "ux-13",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which heuristic relates to reducing the user's memory load?",
    options: ["Match between system and real world", "Consistency", "Recognition rather than recall", "Flexibility"],
    correctAnswer: "Recognition rather than recall",
    explanation: "This heuristic suggests making objects and options visible to minimize the user's memory load.",
  },
  {
    id: "ux-14",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "What does WCAG stand for?",
    options: ["Web Content Accessibility Guidelines", "Web Code Authoring Group", "Wide Content Adaptive Guidelines", "Web Custom Accessibility Grid"],
    correctAnswer: "Web Content Accessibility Guidelines",
    explanation: "WCAG defines recommendations for making web content more accessible to people with disabilities.",
  },
  {
    id: "ux-15",
    type: "keyword",
    difficulty: "intermediate",
    question: "Explain the difference between wireframe, mockup, and prototype.",
    explanation: "Wireframes are low-fidelity layouts; mockups add visual design; prototypes simulate interaction and flow.",
    keywords: ["low-fidelity", "visual design", "interaction", "testing"],
  },
  {
    id: "ux-16",
    type: "keyword",
    difficulty: "hard",
    question: "What is the principle of progressive disclosure?",
    explanation: "Progressive disclosure reveals information and options gradually to reduce complexity and cognitive load.",
    keywords: ["simplicity", "complexity", "user control", "advanced options"],
  },
  {
    id: "ux-19",
    type: "multiple-choice",
    difficulty: "hard",
    question: "Which typography unit is relative to the root element's font size?",
    options: ["em", "rem", "px", "pt"],
    correctAnswer: "rem",
    explanation: "The rem unit scales relative to the root (html) element's font size, enabling consistent sizing.",
  },
  {
    id: "ux-20",
    type: "multiple-choice",
    difficulty: "hard",
    question: "Which UX method gathers qualitative insights through moderated sessions?",
    options: ["Survey", "A/B Testing", "User Interviews", "Analytics"],
    correctAnswer: "User Interviews",
    explanation: "User interviews are moderated sessions to understand user behaviors, needs, and motivations qualitatively.",
  },
  {
    id: "ux-21",
    type: "keyword",
    difficulty: "hard",
    question: "Describe the Kano model and its categories.",
    explanation: "The Kano model categorizes features into basic, performance, and delight factors to prioritize development.",
    keywords: ["basic", "performance", "delighters", "excitement", "indifferent"],
  },
  {
    id: "ux-22",
    type: "keyword",
    difficulty: "hard",
    question: "What is accessibility and why is it important in design?",
    explanation: "Accessibility ensures products are usable by people with disabilities, promoting inclusivity and compliance.",
    keywords: ["WCAG", "ARIA", "screen reader", "inclusive", "contrast"],
  },
  {
    id: "ux-25",
    type: "multiple-choice",
    difficulty: "hard",
    question: "Which layout model uses named grid areas for rows and columns?",
    options: ["Flexbox", "CSS Grid", "Float", "Inline-block"],
    correctAnswer: "CSS Grid",
    explanation: "CSS Grid allows defining layout using named grid areas across rows and columns.",
  },
  {
    id: "ux-26",
    type: "keyword",
    difficulty: "intermediate",
    question: "What is card sorting and when is it used?",
    explanation: "Card sorting helps design or evaluate information architecture by having users group and label content.",
    keywords: ["open sort", "closed sort", "categories", "structure"],
  },
  {
    id: "ux-27",
    type: "multiple-choice",
    difficulty: "intermediate",
    question: "Which tool is commonly used for creating vector-based UI designs?",
    options: ["Photoshop", "Illustrator", "Sketch", "Figma"],
    correctAnswer: "Illustrator",
    explanation: "Adobe Illustrator is a leading vector graphics editor used for scalable UI assets.",
  },
  {
    id: "ux-28",
    type: "keyword",
    difficulty: "easy",
    question: "Explain the difference between UI and UX.",
    explanation: "UI (User Interface) is the visual layout; UX (User Experience) is the overall feel and usability.",
    keywords: ["interface", "interaction", "emotions", "usability"],
  },
];

const flashCardData: Record<string, FlashCard[]> = {
  frontend: frontend,
  backend: backend,
  "cs-fundamentals": csFundamentals,
  "ui&ux-design": uiUxDesign,
  'devOps&infrastructure': [],
  'security': [],
  'system-design': [],
  'software-architecture-patterns': [],
  'testing': [],
  'career-job-prep': [],
}

export function getFlashCards(topic: string): FlashCard[] {
  return flashCardData[topic] || []
}
